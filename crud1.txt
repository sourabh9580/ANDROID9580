/*
dbhelper
    @Override
    public void onCreate(SQLiteDatabase DB) {
        DB.execSQL("create Table if not exists empdata(empid integer primary key AutoIncrement,empname Text,emp_designation text,emp_phone integer,emp_email Text)");
    }

    @Override
    public void onUpgrade(SQLiteDatabase DB, int i, int i1) {
        onCreate(DB);
    }

    public boolean insertempdata(String empname,String emp_Designation,String emp_phone,String emp_email){
        SQLiteDatabase DB=this.getWritableDatabase();
        ContentValues cv = new ContentValues();
        cv.put("empname",empname);
        cv.put("emp_Designation",emp_Designation);
        cv.put("emp_phone",emp_phone);
        cv.put("emp_email",emp_email);
        long result=DB.insert("empdata",null,cv);
        if (result==-1){
            return false;
        }
        return true;

    }
    public Boolean updateuserdata(String empname,String emp_Designation,String emp_phone,String emp_email)
    {
        SQLiteDatabase DB = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        contentValues.put("contact", contact);
        contentValues.put("dob", dob);
        Cursor cursor = DB.rawQuery("Select * from Userdetails where name = ?", new String[]{name});
        if (cursor.getCount() > 0) {
            long result = DB.update("Userdetails", contentValues, "name=?", new String[]{name});
            if (result == -1) {
                return false;
            } else {
                return true;
            }
        } else {
            return false;
        }
    }
    public Boolean deletedata (String name)
    {
        SQLiteDatabase DB = this.getWritableDatabase();
        Cursor cursor = DB.rawQuery("Select * from Userdetails where name = ?", new String[]{name});
        if (cursor.getCount() > 0) {
            long result = DB.delete("Userdetails", "name=?", new String[]{name});
            if (result == -1) {
                return false;
            } else {
                return true;
            }
        } else {
            return false;
        }
    }


    public Cursor viewdata(){
        SQLiteDatabase DB= this.getWritableDatabase();
        Cursor cursor=DB.rawQuery("select * from empdata",null);
        return cursor;
    }
    public Cursor searchdata(String empid){
        SQLiteDatabase DB=this.getWritableDatabase();
        Cursor cursor= DB.rawQuery("select * from empdata where empid=?",new String[]{empid});
        return cursor;
    }
}

main activity:
    ListView crudlist;
    ArrayList<String> crud;
    ArrayAdapter<String> adapter;
    getSupportActionBar().setTitle("Crud");

        crudlist =findViewById(R.id.crudlist);
        crud = new ArrayList<>();
        crud.add("Insert");
        crud.add("View Data");
        crud.add("Search");
        adapter=new ArrayAdapter<>(getApplicationContext(), android.R.layout.simple_list_item_1,crud);
        crudlist.setAdapter(adapter);
        crudlist.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                if(i==0){
                    startActivity(new Intent(MainActivity.this,InsertActivity.class));
                }else if(i==1){
                    startActivity(new Intent(MainActivity.this,ViewActivity.class));
                }else if(i==2){
                    startActivity(new Intent(MainActivity.this,SearchActivity.class));
                }

            }
        });
    }
    
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu,menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected( MenuItem item) {
        int id = item.getItemId();

        if (id == R.id.insert) {
            Intent i = new Intent(MainActivity.this, InsertActivity.class);
            startActivity(i);
            return true;
        }
        else if (id == R.id.show) {
            Intent i = new Intent(MainActivity.this, ShowActivity.class);
            startActivity(i);
            return true;
        }
        else
        if (id == R.id.search) {
            Intent i = new Intent(MainActivity.this, SearchActivity.class);
            startActivity(i);
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
}

insert:
Button insert;
    EditText Name,Designation,Phone,Email;
    DBHelper DB = new DBHelper(this,null,null,1);
        insert=findViewById(R.id.btnInsert);
        Name=findViewById(R.id.edname);
        Designation=findViewById(R.id.eddesign);
        Phone=findViewById(R.id.edPhone);
        Email=findViewById(R.id.edEmail);

        insert.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String txtname=Name.getText().toString();
                String txtdesig=Designation.getText().toString();
                String txtphone=Phone.getText().toString();
                String txtemail=Email.getText().toString();

                Boolean checkinsertdata = DB.insertempdata(txtname,txtdesig,txtphone,txtemail);
                if(checkinsertdata == true){
                    Toast.makeText(InsertActivity.this, "Insert Data Successfully", Toast.LENGTH_SHORT).show();
                }
                else{
                    Toast.makeText(InsertActivity.this, "Insert data not successfully", Toast.LENGTH_SHORT).show();
                }
            }
        });

    }
}
update:

update.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String nameTXT = name.getText().toString();
                String contactTXT = contact.getText().toString();
                String dobTXT = dob.getText().toString();

                Boolean checkupdatedata = DB.updateuserdata(nameTXT, contactTXT, dobTXT);
                if(checkupdatedata==true)
                    Toast.makeText(MainActivity.this, "Entry Updated", Toast.LENGTH_SHORT).show();
                else
                    Toast.makeText(MainActivity.this, "New Entry Not Updated", Toast.LENGTH_SHORT).show();
            }        });



delete:
delete.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String nameTXT = name.getText().toString();
                Boolean checkudeletedata = DB.deletedata(nameTXT);
                if(checkudeletedata==true)
                    Toast.makeText(MainActivity.this, "Entry Deleted", Toast.LENGTH_SHORT).show();
                else
                    Toast.makeText(MainActivity.this, "Entry Not Deleted", Toast.LENGTH_SHORT).show();
            }        });

view:

Button view;
    DBHelper db = new DBHelper(this,null,null,1);
        view=findViewById(R.id.btnview);

        view.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Cursor res = db.viewdata();
                if(res.getCount()==0){
                    Toast.makeText(ViewActivity.this, "No Entry Exist", Toast.LENGTH_SHORT).show();
                }
                StringBuffer buffer= new StringBuffer();
                AlertDialog.Builder builder=new AlertDialog.Builder(ViewActivity.this);
                while (res.moveToNext()){
                    buffer.append("ID: "+res.getString(0)+"\n");
                    buffer.append("Name: "+res.getString(1)+"\n");
                    buffer.append("Designation: "+res.getString(2)+"\n");
                    buffer.append("Phone: "+res.getString(3)+"\n");
                    buffer.append("Email: "+res.getString(4)+"\n");
                    buffer.append("\n");
                }
                builder.setCancelable(true);
                builder.setTitle("Employee Deatil");
                builder.setMessage(buffer.toString());
                builder.show();
            }
        });
    }
}

search:
DBHelper db = new DBHelper(this,null,null,1);
    Button Search;
    EditText id;
        id=findViewById(R.id.editTextTextPersonName);
        Search=findViewById(R.id.button);

        Search.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String txtId =id.getText().toString();
                Cursor res= db.searchdata(txtId);
                if(res.getCount()==0){
                    Toast.makeText(SearchActivity.this, "No Entry Exist", Toast.LENGTH_SHORT).show();
                }
                StringBuffer buffer= new StringBuffer();
                AlertDialog.Builder builder=new AlertDialog.Builder(SearchActivity.this);
                while (res.moveToNext()){
                    buffer.append("ID: "+res.getString(0)+"\n");
                    buffer.append("Name: "+res.getString(1)+"\n");
                    buffer.append("Designation: "+res.getString(2)+"\n");
                    buffer.append("Phone: "+res.getString(3)+"\n");
                    buffer.append("Email: "+res.getString(4)+"\n");
                    buffer.append("\n");
                }
                builder.setCancelable(true);
                builder.setTitle("Employee Deatil");
                builder.setMessage(buffer.toString());
                builder.show();
            }
        });
    }
}











*/
